/**
 * Configuration management for VibeCoding Logger
 *
 * Provides default configuration and environment variable support
 * following TypeScript best practices while maintaining compatibility
 * with Python implementation concepts.
 */
import { VibeLoggerConfig } from './types.js';
/**
 * Configuration class with defaults and environment variable support
 */
export declare class VibeLoggerConfigManager {
    private config;
    constructor(options?: VibeLoggerConfig);
    /**
     * Load configuration from environment variables
     * Matches Python naming convention: VIBE_*
     */
    private loadFromEnvironment;
    /**
     * Generate default values for empty configuration
     */
    private generateDefaults;
    /**
     * Generate a unique correlation ID
     */
    private generateCorrelationId;
    /**
     * Generate default log file path with timestamp
     * Uses project folder for better Claude Code access: ./logs/vibe_YYYYMMDD_HHMMSS.log
     */
    private generateDefaultLogFile;
    /**
     * Create a default file configuration for a specific project
     */
    static createDefaultFileConfig(projectName: string): VibeLoggerConfigManager;
    /**
     * Create configuration from environment variables only
     */
    static fromEnvironment(): VibeLoggerConfigManager;
    /**
     * Get the current configuration
     */
    getConfig(): Required<VibeLoggerConfig>;
    /**
     * Update configuration with new values
     */
    updateConfig(updates: Partial<VibeLoggerConfig>): void;
    /**
     * Validate configuration values
     */
    validate(): {
        valid: boolean;
        errors: string[];
    };
}
//# sourceMappingURL=config.d.ts.map